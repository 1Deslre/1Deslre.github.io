<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Redis分布式锁</title>
    <link href="/2024/01/29/Boot%E6%95%B4%E5%90%88Redis%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/01/29/Boot%E6%95%B4%E5%90%88Redis%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>​<img src="/2024/01/29/Boot%E6%95%B4%E5%90%88Redis%E6%90%AD%E5%BB%BA/downloaded_image.jpg" class=""></p><p><strong>使用场景：</strong>多个服务间 + 保证同一时刻内 + 同一用户只能有一个请求（防止关键业务出现数据冲突和并发错误）</p><h3 id="一、项目搭建"><a href="#一、项目搭建" class="headerlink" title="一、项目搭建"></a>一、项目搭建</h3><p>​首先创建两个boot项目，来模仿两个服务。我是基于JDK8 + spring boot 2.5.4 的环境进行搭建。</p><p>​配置<strong>pom</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs pom">&lt;dependencies&gt;<br><br>    &lt;!-- web + actuator --&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br>    &lt;/dependency&gt;<br><br>    &lt;!-- SpringBoot 与 Redis 整合依赖 --&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;<br>        &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;<br>    &lt;/dependency&gt;<br>    &lt;!-- jedis --&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;redis.clients&lt;/groupId&gt;<br>        &lt;artifactId&gt;jedis&lt;/artifactId&gt;<br>        &lt;version&gt;3.1.0&lt;/version&gt;<br>    &lt;/dependency&gt;<br><br>    &lt;!-- springboot aop 技术 --&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;<br>    &lt;/dependency&gt;<br><br>    &lt;!-- redisson --&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.redisson&lt;/groupId&gt;<br>        &lt;artifactId&gt;redisson&lt;/artifactId&gt;<br>        &lt;version&gt;3.13.4&lt;/version&gt;<br>    &lt;/dependency&gt;<br><br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;<br>    &lt;/dependency&gt;<br><br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;<br>        &lt;scope&gt;test&lt;/scope&gt;<br>    &lt;/dependency&gt;<br>&lt;/dependencies&gt;<br><br>&lt;build&gt;<br>    &lt;plugins&gt;<br>        &lt;plugin&gt;<br>            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;<br>        &lt;/plugin&gt;<br>    &lt;/plugins&gt;<br>&lt;/build&gt;<br></code></pre></td></tr></table></figure><p><strong>application.properties</strong>配置文件：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">server.port</span>=<span class="hljs-string">1111</span><br><span class="hljs-attr">spring.redis.database</span>=<span class="hljs-string">0</span><br><span class="hljs-attr">spring.redis.host</span>=<span class="hljs-string">192.168.91.132</span><br><span class="hljs-attr">spring.redis.port</span>=<span class="hljs-string">6379</span><br><span class="hljs-attr">spring.redis.password</span>=<span class="hljs-string"></span><br><span class="hljs-attr">spring.redis.lettuce.pool.max-active</span>=<span class="hljs-string">8</span><br><span class="hljs-attr">spring.redis.lettuce.pool.max-wait</span>=<span class="hljs-string">-1</span><br><span class="hljs-attr">spring.redis.lettuce.pool.max-idle</span>=<span class="hljs-string">8</span><br><span class="hljs-attr">spring.redis.lettuce.pool.min-idle</span>=<span class="hljs-string">0</span><br></code></pre></td></tr></table></figure><p><strong>将上面项目的配置复制一份创建第二个 boot 项目。并修改端口号为 2222：</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">server.port</span>=<span class="hljs-string">2222</span><br><span class="hljs-attr">spring.redis.database</span>=<span class="hljs-string">0</span><br><span class="hljs-attr">spring.redis.host</span>=<span class="hljs-string">192.168.91.132</span><br><span class="hljs-attr">spring.redis.port</span>=<span class="hljs-string">6379</span><br><span class="hljs-attr">spring.redis.password</span>=<span class="hljs-string"></span><br><span class="hljs-attr">spring.redis.lettuce.pool.max-active</span>=<span class="hljs-string">8</span><br><span class="hljs-attr">spring.redis.lettuce.pool.max-wait</span>=<span class="hljs-string">-1</span><br><span class="hljs-attr">spring.redis.lettuce.pool.max-idle</span>=<span class="hljs-string">8</span><br><span class="hljs-attr">spring.redis.lettuce.pool.min-idle</span>=<span class="hljs-string">0</span><br></code></pre></td></tr></table></figure><h3 id="二、配置-config"><a href="#二、配置-config" class="headerlink" title="二、配置 config"></a>二、配置 config</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedisConfig</span> &#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> RedisTemplate&lt;String, Serializable&gt; <span class="hljs-title function_">redisTemplate</span><span class="hljs-params">(LettuceConnectionFactory connectionFactory)</span> &#123;<br>        RedisTemplate&lt;String, Serializable&gt; redisTemplate = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RedisTemplate</span>&lt;&gt;();<br>        redisTemplate.setConnectionFactory(connectionFactory);<br><br>        redisTemplate.setKeySerializer(<span class="hljs-keyword">new</span> <span class="hljs-title class_">StringRedisSerializer</span>());<br>        redisTemplate.setValueSerializer(<span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericJackson2JsonRedisSerializer</span>());<br><br>        <span class="hljs-keyword">return</span> redisTemplate;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="三、编写-controller"><a href="#三、编写-controller" class="headerlink" title="三、编写 controller"></a>三、编写 controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GoodController</span> &#123;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> StringRedisTemplate stringRedisTemplate;<br><br>    <span class="hljs-meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String serverPort;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/buy_goods&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">buy_Goods</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">synchronized</span> (<span class="hljs-built_in">this</span>) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> stringRedisTemplate.opsForValue().get(<span class="hljs-string">&quot;goods:001&quot;</span>);<br>            <span class="hljs-type">int</span> <span class="hljs-variable">goodsNumber</span> <span class="hljs-operator">=</span> result == <span class="hljs-literal">null</span> ? <span class="hljs-number">0</span> : Integer.parseInt(result);<br><br>            <span class="hljs-keyword">if</span> (goodsNumber &gt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">realNumber</span> <span class="hljs-operator">=</span> goodsNumber - <span class="hljs-number">1</span>;<br>                stringRedisTemplate.opsForValue().set(<span class="hljs-string">&quot;goods:001&quot;</span>, String.valueOf(realNumber));<br>                System.out.println(<span class="hljs-string">&quot;成功买到商品，库存还剩下 ： &quot;</span> + realNumber + <span class="hljs-string">&quot;件&quot;</span> + <span class="hljs-string">&quot;\t 服务提供端口 ： &quot;</span> + serverPort);<br><br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;成功买到商品，库存还剩下 ： &quot;</span> + realNumber + <span class="hljs-string">&quot;件&quot;</span> + <span class="hljs-string">&quot;\t 服务提供端口 ： &quot;</span> + serverPort;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                System.out.println(<span class="hljs-string">&quot;商品已经售完/活动结束/调用超时，欢迎下次光临&quot;</span> + <span class="hljs-string">&quot;\t 服务提供端口 ： &quot;</span> + serverPort);<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;商品已经售完/活动结束/调用超时，欢迎下次光临&quot;</span> + <span class="hljs-string">&quot;\t 服务提供端口 ： &quot;</span> + serverPort;<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="四、项目结构"><a href="#四、项目结构" class="headerlink" title="四、项目结构"></a>四、项目结构</h3><img src="/2024/01/29/Boot%E6%95%B4%E5%90%88Redis%E6%90%AD%E5%BB%BA/s1.jpg" class=""><h3 id="五、启动项目进行测试"><a href="#五、启动项目进行测试" class="headerlink" title="五、启动项目进行测试"></a>五、启动项目进行测试</h3><p>​<strong>首先要在 redis 里面加入 100 进行模仿库存：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs redis">set goods:001 100<br>get goods:001<br></code></pre></td></tr></table></figure><img src="/2024/01/29/Boot%E6%95%B4%E5%90%88Redis%E6%90%AD%E5%BB%BA/s2.jpg" class=""><p><strong>项目启动成功在浏览器访问，成功。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://localhost:1111/buy_goods<br></code></pre></td></tr></table></figure><img src="/2024/01/29/Boot%E6%95%B4%E5%90%88Redis%E6%90%AD%E5%BB%BA/s3.jpg" class=""><p><strong>启动第二个项目进行访问，成功。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://localhost:2222/buy_goods<br></code></pre></td></tr></table></figure><img src="/2024/01/29/Boot%E6%95%B4%E5%90%88Redis%E6%90%AD%E5%BB%BA/s4.jpg" class=""><p><strong>项目基础搭建完成，但还存在很多问题，请看下一篇。</strong></p>]]></content>
    
    
    <categories>
      
      <category>Redis</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
